# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    machine: true
#    docker:
#      # Specify the version you desire here
#      - image: circleci/php:7.3
#
#      # Specify service dependencies here if necessary
#      # CircleCI maintains a library of pre-built images
#      # documented at https://circleci.com/docs/2.0/circleci-images/
#      # Using the RAM variation mitigates I/O contention
#      # for database intensive operations.
#      - image: circleci/mysql:5.7.23
#      #
#      - image: redis:latest
##      - image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1
##        name: elasticsearch
##        environment:
##          http.host: '0.0.0.0'
##          http.port: 9200
##          xpack.security.enabled: false
##          transport.host: localhost
##          network.host: 127.0.0.1
##          ES_JAVA_OPTS: '-Xms512m -Xmx512m'
##          discovery.type: single-node
#    environment:
#      - DB_DATABASE: circle_test
#      - DB_USERNAME: root
#      - DB_PASSWORD: ''

    steps:
      - checkout
      - run: docker-compose up -d
      - run: docker-compose ps
#      - checkout
#
      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip pdo_mysql
      - run: cp .env.example .env

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      # Composer Speed UP
      - run: composer config -g repos.packagist composer https://packagist.jp
      - run: composer global require hirak/prestissimo

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run: php artisan key:generate
      - run: php artisan migrate
      - run: vendor/bin/phpunit tests/